<?php

/**
 * This file is generated by architect.
 */

namespace ShopGroups\Shops\v1;

/**
 * Generated from protobuf message <code>ecom.shop_group_service.v1.ProcessFailedMessagesRequest</code>
 */
class ProcessFailedMessagesRequest extends \Google\Protobuf\Internal\Message implements \JsonSerializable
{
	/** Generated from protobuf field <code>int32 LimitCount = 1;</code> */
	private $LimitCount = 0;

	/** Generated from protobuf field <code>int32 LimitTime = 2;</code> */
	private $LimitTime = 0;


	/**
	 * Constructor.
	 *
	 * @param array $data {
	 *     Optional. Data for populating the Message object.
	 *
	 *     //type int $LimitCount
	 *     //type int $LimitTime
	 * }
	 */
	public function __construct($data = NULL)
	{
		Meta\EcomShopGroupServiceV1::initOnce();
		parent::__construct($data);
	}


	/**
	 * Generated from protobuf field <code>int32 LimitCount = 1;</code>
	 * @return int
	 */
	public function getLimitCount()
	{
		return $this->LimitCount;
	}


	/**
	 * Generated from protobuf field <code>int32 LimitCount = 1;</code>
	 * @param int $var
	 * @return $this
	 */
	public function setLimitCount($var)
	{
		\Google\Protobuf\Internal\GPBUtil::checkInt32($var);
		$this->LimitCount = $var;

		return $this;
	}


	/**
	 * Generated from protobuf field <code>int32 LimitTime = 2;</code>
	 * @return int
	 */
	public function getLimitTime()
	{
		return $this->LimitTime;
	}


	/**
	 * Generated from protobuf field <code>int32 LimitTime = 2;</code>
	 * @param int $var
	 * @return $this
	 */
	public function setLimitTime($var)
	{
		\Google\Protobuf\Internal\GPBUtil::checkInt32($var);
		$this->LimitTime = $var;

		return $this;
	}


	/**
	 * This method created only for OA doc generation
	 */
	public function jsonSerialize(): mixed
	{
		$result = [];
		if (is_object($this->getLimitCount()) && method_exists($this->getLimitCount(), 'jsonSerialize')) {
		                        $result['LimitCount'] = $this->getLimitCount()->jsonSerialize();
		                    } else {
		                        $result['LimitCount'] = $this->getLimitCount();
		                    }if (is_object($this->getLimitTime()) && method_exists($this->getLimitTime(), 'jsonSerialize')) {
		                        $result['LimitTime'] = $this->getLimitTime()->jsonSerialize();
		                    } else {
		                        $result['LimitTime'] = $this->getLimitTime();
		                    }return $result;
	}
}
