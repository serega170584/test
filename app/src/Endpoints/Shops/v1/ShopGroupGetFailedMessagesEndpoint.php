<?php

/**
 * This file is generated by architect.
 */

namespace App\Endpoints\Shops\v1;

use App\Bus\BusManager;
use App\UseCase\Query\GetFailedMessagesCount\GetFailedMessagesCountQuery;
use Google\Protobuf\Int32Value;
use OpenApi\Attributes\JsonContent;
use OpenApi\Attributes\Response;
use ShopGroups\Shops\v1\AbstractEndpoints\ShopGroupGetFailedMessagesAbstractEndpoint;
use ShopGroups\Shops\v1\GetFailedMessagesRequest;
use ShopGroups\Shops\v1\GetFailedMessagesResponse;
use Symfony\Component\Routing\Annotation\Route;

class ShopGroupGetFailedMessagesEndpoint extends ShopGroupGetFailedMessagesAbstractEndpoint
{
    public function __construct(
        private readonly BusManager $busManager,
    ) {
    }

    #[Route('/api/v1/messenger/get-failed', name: 'messenger-get-failed', methods: ['GET'])]
    #[Response(response: 200, description: 'OK', content: new JsonContent(example: '{"CountRemaining":null}'))]
    #[Response(
        response: 422,
        description: '',
        content: new JsonContent(example: '{"title":"Validation Error","detail":["some field is incorrect","some field is incorrect also"]}'),
    )]
    protected function run(GetFailedMessagesRequest $dto): GetFailedMessagesResponse
    {
        return (new GetFailedMessagesResponse())
            ->setCountRemaining((new Int32Value())->setValue($this->getFailedMessagesCount()));
    }

    private function getFailedMessagesCount(): int
    {
        $getFailedDto = $this->busManager->askGetFailedMessagesCountQuery(new GetFailedMessagesCountQuery());

        return $getFailedDto->count;
    }
}
