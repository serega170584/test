<?php

/**
 * This file is generated by architect.
 */

namespace App\Endpoints\Shops\v1;

use App\Bus\BusManager;
use App\DTO\Response\ExportShopGroup\ConsumerDto;
use App\DTO\Response\ExportShopGroup\ShopGroupDto;
use App\DTO\Response\ExportShopGroup\ShopGroupToShopDto;
use App\UseCase\Query\Export\ExportShopGroupQuery;
use Test\PhpServicesBundle\GrpcAttributes\GrpcService;
use OpenApi\Attributes\JsonContent;
use OpenApi\Attributes\Response;
use ShopGroups\Shops\v1\AbstractEndpoints\ShopGroupExportAbstractEndpoint;
use ShopGroups\Shops\v1\ExportRequest;
use ShopGroups\Shops\v1\ExportResponse;
use Symfony\Component\Routing\Annotation\Route;

class ShopGroupExportEndpoint extends ShopGroupExportAbstractEndpoint
{
    public function __construct(
        private readonly BusManager $bus,
    ) {
    }

    #[Route('/api/v1/export', name: 'export-shop-group', methods: ['GET'])]
    #[GrpcService]
    #[Response(
        response: 200,
        description: 'OK',
        content: new JsonContent(example: '{"ShopGroups":"","Consumers":"","ShopsToShopGroups":""}'),
    )]
    #[Response(
        response: 422,
        description: '',
        content: new JsonContent(example: '{"title":"Validation Error","detail":["some field is incorrect","some field is incorrect also"]}'),
    )]
    protected function run(ExportRequest $dto): ExportResponse
    {
        $exportData = $this->bus->askExportShopGroupQuery(new ExportShopGroupQuery());

        return (new ExportResponse())
            ->setShopGroups(
                'code;title;description;parent_code;active;consumer_code;fias_id'.PHP_EOL.
                implode(
                    PHP_EOL,
                    array_map(static function (ShopGroupDto $shopGroupDto) {
                        return (string) $shopGroupDto;
                    }, $exportData->getShopGroups()))
            )
            ->setConsumers(
                'code;title;description'.PHP_EOL.
                implode(
                    PHP_EOL,
                    array_map(static function (ConsumerDto $consumerDto) {
                        return (string) $consumerDto;
                    }, $exportData->getConsumers()))
            )
            ->setShopsToShopGroups(
                'uf_xml_id;shop_group_code'.PHP_EOL.
                implode(
                    PHP_EOL,
                    array_map(static function (ShopGroupToShopDto $shopGroupToShopDto) {
                        return (string) $shopGroupToShopDto;
                    }, $exportData->getShopGroupToShop()))
            );
    }
}
