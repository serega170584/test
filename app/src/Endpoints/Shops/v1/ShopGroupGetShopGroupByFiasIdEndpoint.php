<?php

/**
 * This file is generated by architect.
 */

namespace App\Endpoints\Shops\v1;

use App\Bus\BusManager;
use App\Interceptor\DefineConsumerInterceptor;
use App\UseCase\Query\GetActiveShopGroupByFiasId\GetActiveShopGroupByFiasIdQuery;
use App\ValueObject\ConsumerCode;
use Test\PhpServicesBundle\GrpcAttributes\GrpcService;
use Test\PhpServicesBundle\MessageValidationInterceptor;
use OpenApi\Attributes\JsonContent;
use OpenApi\Attributes\Parameter;
use OpenApi\Attributes\Response;
use Psr\Log\LoggerInterface;
use ShopGroups\Shops\v1\AbstractEndpoints\ShopGroupGetShopGroupByFiasIdAbstractEndpoint;
use ShopGroups\Shops\v1\GetShopGroupByFiasIdRequest;
use ShopGroups\Shops\v1\GetShopGroupByFiasIdResponse;
use Symfony\Component\Routing\Annotation\Route;

class ShopGroupGetShopGroupByFiasIdEndpoint extends ShopGroupGetShopGroupByFiasIdAbstractEndpoint
{
    public function __construct(
        private readonly BusManager $busManager,
        private LoggerInterface $logger,
    ) {
    }

    #[GrpcService]
    #[Route('/api/v1/shop-group/by-fias-id/{FiasId}', methods: ['GET'])]
    #[DefineConsumerInterceptor]
    #[MessageValidationInterceptor] // Порядок атрибутов важен
    #[Parameter(name: 'X-Device-Platform', description: 'Alternative ConsumerCode', in: 'header')]
    #[Parameter(name: 'ConsumerCode', description: 'Alternative X-Device-Platform', in: 'query')]
    #[Parameter(name: 'X-App-Version', description: 'Версия клиента(консьюмера)', in: 'header', example: '1.0.0')]
    #[Parameter(name: 'FiasId', in: 'path')]
    #[Response(response: 200, description: 'OK', content: new JsonContent(example: '{"ShopGroupCode":"shop_group_location_1","Title":"г. Москва"}'))]
    #[Response(
        response: 422,
        description: '',
        content: new JsonContent(example: '{"title":"Validation Error","detail":["some field is incorrect","some field is incorrect also"]}'),
    )]
    protected function run(GetShopGroupByFiasIdRequest $dto): GetShopGroupByFiasIdResponse
    {
        $this->logger->info('[Get Shop Group By FIAS ID Request]', [
            'consumer_code' => $dto->getConsumerCode(),
            'consumer_version' => $dto->getConsumerVersion(),
        ]);

        $shopGroup = $this->busManager->askGetActiveShopGroupByFiasIdQuery(
            new GetActiveShopGroupByFiasIdQuery(
                $dto->getFiasId(),
                new ConsumerCode($dto->getConsumerCode()),
                $dto->getConsumerVersion()
            )
        );

        return (new GetShopGroupByFiasIdResponse())
            ->setTitle($shopGroup->getTitle())
            ->setShopGroupCode($shopGroup->getCode());
    }
}
