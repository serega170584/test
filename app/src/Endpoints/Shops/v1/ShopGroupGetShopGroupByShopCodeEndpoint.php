<?php

/**
 * This file is generated by architect.
 */

namespace App\Endpoints\Shops\v1;

use App\Bus\BusManager;
use App\Interceptor\DefineConsumerInterceptor;
use App\UseCase\Query\GetShopGroupByShopCode\GetShopGroupByShopCodeQuery;
use App\ValueObject\ConsumerCode;
use Test\PhpServicesBundle\GrpcAttributes\GrpcService;
use Test\PhpServicesBundle\MessageValidationInterceptor;
use OpenApi\Attributes\JsonContent;
use OpenApi\Attributes\Parameter;
use OpenApi\Attributes\Response;
use ShopGroups\Shops\v1\AbstractEndpoints\ShopGroupGetShopGroupByShopCodeAbstractEndpoint;
use ShopGroups\Shops\v1\GetShopGroupByShopCodeRequest;
use ShopGroups\Shops\v1\GetShopGroupByShopCodeResponse;
use Symfony\Component\Routing\Annotation\Route;

class ShopGroupGetShopGroupByShopCodeEndpoint extends ShopGroupGetShopGroupByShopCodeAbstractEndpoint
{
    public function __construct(
        private readonly BusManager $busManager,
    ) {
    }

    #[GrpcService]
    #[Route('/api/v1/consumer/{ConsumerCode}/getShopGroupByShopCode/{UfXmlId}', methods: ['GET'])]
    #[DefineConsumerInterceptor]
    #[MessageValidationInterceptor]
    #[Parameter(name: 'ConsumerCode', in: 'path')]
    #[Parameter(name: 'UfXmlId', in: 'path')]
    #[Parameter(name: 'X-App-Version', description: 'Версия клиента(консьюмера)', in: 'header', example: '1.0.0')]
    #[Response(response: 200, description: 'OK', content: new JsonContent(example: '{"ShopGroupCode":"","Title":""}'))]
    #[Response(
        response: 422,
        description: '',
        content: new JsonContent(example: '{"title":"Validation Error","detail":["some field is incorrect","some field is incorrect also"]}'),
    )]
    protected function run(GetShopGroupByShopCodeRequest $dto): GetShopGroupByShopCodeResponse
    {
        $shopGroup = $this->busManager->askGetShopGroupByShopCodeQuery(
            new GetShopGroupByShopCodeQuery(
                $dto->getUfXmlId(),
                new ConsumerCode($dto->getConsumerCode()),
                $dto->getConsumerVersion()
            )
        );

        return (new GetShopGroupByShopCodeResponse())
            ->setShopGroupCode($shopGroup->getCode())
            ->setTitle($shopGroup->getTitle());
    }
}
