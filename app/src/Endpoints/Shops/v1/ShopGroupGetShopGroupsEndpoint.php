<?php

/**
 * This file is generated by architect.
 */

namespace App\Endpoints\Shops\v1;

use App\Bus\BusManager;
use App\Interceptor\DefineConsumerInterceptor;
use App\UseCase\Query\GetShopGroups\GetShopGroupsQuery;
use App\ValueObject\ConsumerCode;
use Test\PhpServicesBundle\GrpcAttributes\GrpcService;
use Test\PhpServicesBundle\MessageValidationInterceptor;
use OpenApi\Attributes\Items;
use OpenApi\Attributes\JsonContent;
use OpenApi\Attributes\Parameter;
use OpenApi\Attributes\Response;
use OpenApi\Attributes\Schema;
use ShopGroups\Shops\v1\AbstractEndpoints\ShopGroupGetShopGroupsAbstractEndpoint;
use ShopGroups\Shops\v1\GetShopGroupsRequest;
use ShopGroups\Shops\v1\GetShopGroupsResponse;
use ShopGroups\Shops\v1\ShopGroupModel;
use Symfony\Component\Routing\Annotation\Route;

class ShopGroupGetShopGroupsEndpoint extends ShopGroupGetShopGroupsAbstractEndpoint
{
    public function __construct(
        private readonly BusManager $busManager,
    ) {
    }

    #[GrpcService]
    #[Route('/api/v1/shop-groups', methods: ['GET'])]
    #[DefineConsumerInterceptor]
    #[MessageValidationInterceptor]
    #[Parameter(name: 'X-Device-Platform', description: 'Alternative consumerCode', in: 'header')]
    #[Parameter(name: 'consumerCode', description: 'Alternative X-Device-Platform', in: 'query')]
    #[Parameter(name: 'shopGroupCodes[]', in: 'query', schema: new Schema(type: 'array', items: new Items(type: 'string')))]
    #[Parameter(name: 'fiasIds[]', in: 'query', schema: new Schema(type: 'array', items: new Items(type: 'string')))]
    #[Parameter(name: 'X-App-Version', description: 'Версия клиента(консьюмера)', in: 'header', example: '1.0.0')]
    #[Response(
        response: 200,
        description: 'OK',
        content: new JsonContent(example: '{"items":[{"code":"shop_group_location_1","fiasId":"0c5b2444-70a0-4932-980c-b4dc0d3f02b5"},{"code":"shop_group_location_188002","fiasId":"c42f3732-f05e-4bcf-aa88-d1c578ebd227"}]}'),
    )]
    #[Response(
        response: 422,
        description: '',
        content: new JsonContent(example: '{"title":"Validation Error","detail":["some field is incorrect","some field is incorrect also"]}'),
    )]
    protected function run(GetShopGroupsRequest $dto): GetShopGroupsResponse
    {
        $shopGroups = $this->busManager->askGetShopGroupsQuery(
            new GetShopGroupsQuery(
                new ConsumerCode($dto->getConsumerCode()),
                iterator_to_array($dto->getShopGroupCodes()),
                iterator_to_array($dto->getFiasIds()),
                $dto->getConsumerVersion()
            )
        );

        return (new GetShopGroupsResponse())
            ->setItems($this->createItems($shopGroups));
    }

    private function createItems(iterable $shopGroups): array
    {
        $items = [];
        foreach ($shopGroups as $shopGroup) {
            $items[] = (new ShopGroupModel())
                ->setCode($shopGroup->getCode())
                ->setFiasId($shopGroup->getFiasId());
        }

        return $items;
    }
}
