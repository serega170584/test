<?php

/**
 * This file is generated by architect.
 */

namespace App\Endpoints\Shops\v1;

use App\UseCase\Command\HandleFailedMessages\HandleFailedMessagesCommand;
use Test\PhpServicesBundle\Bus\MessengerBus;
use Test\PhpServicesBundle\GrpcAttributes\GrpcService;
use OpenApi\Attributes\JsonContent;
use OpenApi\Attributes\RequestBody;
use OpenApi\Attributes\Response;
use ShopGroups\Shops\v1\AbstractEndpoints\ShopGroupProcessFailedMessagesAbstractEndpoint;
use ShopGroups\Shops\v1\ProcessFailedMessagesRequest;
use ShopGroups\Shops\v1\ProcessFailedMessagesResponse;
use Symfony\Component\Routing\Annotation\Route;

class ShopGroupProcessFailedMessagesEndpoint extends ShopGroupProcessFailedMessagesAbstractEndpoint
{
    public function __construct(
        private readonly MessengerBus $bus,
    ) {
    }

    #[GrpcService]
    #[Route('/api/v1/messenger/process-failed', name: 'messenger-process-failed', methods: ['POST'])]
    #[RequestBody(content: new JsonContent(example: '{"LimitCount":0,"LimitTime":0}'))]
    #[Response(response: 200, description: 'OK', content: new JsonContent(example: '{}'))]
    #[Response(
        response: 422,
        description: '',
        content: new JsonContent(example: '{"title":"Validation Error","detail":["some field is incorrect","some field is incorrect also"]}'),
    )]
    protected function run(ProcessFailedMessagesRequest $dto): ProcessFailedMessagesResponse
    {
        $limitCount = $dto->getLimitCount() ?: 10;
        $limitTime = $dto->getLimitTime() ?: 60;

        $this->bus->executeAsync(new HandleFailedMessagesCommand($limitCount, $limitTime));

        return new ProcessFailedMessagesResponse();
    }
}
